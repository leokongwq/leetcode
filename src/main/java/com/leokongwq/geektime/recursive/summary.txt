递归需要满足的三个条件

1. 一个问题的解可以分解为几个子问题的解
2. 这个问题与分解之后的子问题，除了数据规模不同，求解思路完全一样
3. 存在递归终止条件 (这个非常重要，否则无限循环了 or 栈溢出)


如何编写递归代码？

答：写递归代码最关键的是写出递推公式，找到终止条件。要找到递推公式，就要仔细分析问题规律，找到问题和子问题前的关系。


编写递归代码的关键是，只要遇到递归，我们就把它抽象成一个递推公式，不用想一层层的调用关系，不要试图用人脑去分解递归的每个步骤

注意；

1. 递归代码要警惕堆栈溢出

2. 递归代码要警惕重复计算

3. 在时间效率上，递归代码里多了很多函数调用，当这些函数调用的数量较大时，就会积聚成一个可观的时间成本。在空间复杂度上，因为递归调用一次就会在内存栈中保存一次现场数据，
所以在分析递归代码空间复杂度时，需要额外考虑这部分的开销，比如我们前面讲到的电影院递归代码，空间复杂度并不是 O(1)，而是 O(n)。